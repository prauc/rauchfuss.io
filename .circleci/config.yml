version: 2.1

references:
  image_name: &image_name
    eu.gcr.io/rauchfuss-io/rauchfuss-io

  auth: &auth
    run:
      name: Auth against GCP
      command: |
        echo $CLIENT_CREDENTIALS | gcloud auth activate-service-account --key-file=-
        gcloud config list
        gcloud auth configure-docker -q

  copy_vendor: &copy_vendor
    run:
      name: Copy vendor directory
      command: cp -R /tmp/vendor .

  create_sa_pk: &create_sa_pk
    run:
      name: Create GCP Service Account Private Key
      command: |
        mkdir .secrets
        echo $SA_AUTH_FILE > .secrets/rauchfuss-io-46affd1cc183.json

jobs:
  install_dependencies:
    docker:
      - image: composer:2.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - 'composer-{{ checksum "composer.lock"  }}'
      - run: composer update --with-all-dependencies
      - save_cache:
          key: 'composer-{{ checksum "composer.lock"  }}'
          paths:
            - vendor
      - persist_to_workspace:
          root: .
          paths:
            - vendor

  test_functional:
    docker:
      - image: circleci/php:cli
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - *copy_vendor
      - run: ./bin/phpunit

  test_lint:
    docker:
      - image: circleci/php:cli
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - *copy_vendor
      - run: ./vendor/bin/phplint

  build_and_deploy_image:
    environment:
      - IMAGE_NAME: *image_name
    docker:
      - image: google/cloud-sdk:alpine
    steps:
      - checkout
      - *auth
      - setup_remote_docker
      - attach_workspace:
          at: /tmp
      - *copy_vendor
      - *create_sa_pk
      - run:
          name: Update Build-Hash
          command: sed -i "/BUILD=/c\BUILD=$CIRCLE_SHA1" .env
      - run:
          name: Build application Docker image
          command: |
            docker build -t rauchfussio .
      - run:
          name: Push to Container Registry
          command: |
            docker tag rauchfussio $IMAGE_NAME
            docker push $IMAGE_NAME

  deploy_revision_staging:
    environment:
      - IMAGE_NAME: *image_name
    docker:
      - image: google/cloud-sdk:alpine
    steps:
      - *auth
      - run:
          name: Deploy new Revision
          command: gcloud run deploy $CLOUDRUN_STAGING_SERVICE_NAME --image $IMAGE_NAME --platform managed --region europe-west1 --project $GCP_PROJECTID
      - run: echo "Successfully deployed to Staging"

  deploy_revision_production:
    environment:
      - IMAGE_NAME: *image_name
    docker:
      - image: google/cloud-sdk:alpine
    steps:
      - *auth
      - run:
          name: Deploy new Revision
          command: gcloud run deploy $CLOUDRUN_PROD_SERVICE_NAME --image $IMAGE_NAME --platform managed --region europe-west1 --project $GCP_PROJECTID
      - run: echo "Successfully deployed to Production"

workflows:
  version: 2
  "Build, Test and Deploy":
    jobs:
      - install_dependencies
      - test_lint:
          requires:
            - install_dependencies
      - build_and_deploy_image:
          requires:
            - install_dependencies
            - test_functional
            - test_lint
      - deploy_revision_staging:
          requires:
            - build_and_deploy_image
      - hold:
          type: approval
          requires:
            - install_dependencies
            - test_functional
            - test_lint
            - deploy_revision_staging
      - deploy_revision_production:
          requires:
            - hold